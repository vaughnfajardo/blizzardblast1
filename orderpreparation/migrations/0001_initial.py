# Generated by Django 4.1.3 on 2022-12-01 21:48

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Customer",
            fields=[
                (
                    "customer_name",
                    models.CharField(max_length=25, primary_key=True, serialize=False),
                ),
            ],
            options={"db_table": "customer", "managed": False,},
        ),
        migrations.CreateModel(
            name="Employee",
            fields=[
                ("employee_id", models.IntegerField(primary_key=True, serialize=False)),
                (
                    "employee_name",
                    models.CharField(blank=True, max_length=25, null=True),
                ),
            ],
            options={"db_table": "employee", "managed": False,},
        ),
        migrations.CreateModel(
            name="Ingredient",
            fields=[
                (
                    "ingredient_name",
                    models.CharField(max_length=25, primary_key=True, serialize=False),
                ),
                ("category", models.CharField(blank=True, max_length=15, null=True)),
                ("quantity_on_hand", models.IntegerField(blank=True, null=True)),
                ("price_per_serving", models.FloatField(blank=True, null=True)),
            ],
            options={"db_table": "ingredient", "managed": False,},
        ),
        migrations.CreateModel(
            name="Manager",
            fields=[
                ("manager_id", models.IntegerField(primary_key=True, serialize=False)),
                ("manager_schedule", models.DateField(blank=True, null=True)),
            ],
            options={"db_table": "manager", "managed": False,},
        ),
        migrations.CreateModel(
            name="Milkshake",
            fields=[
                ("shake_id", models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={"db_table": "milkshake", "managed": False,},
        ),
        migrations.CreateModel(
            name="Orders",
            fields=[
                ("txn_number", models.IntegerField(primary_key=True, serialize=False)),
                ("order_date", models.DateField(blank=True, null=True)),
            ],
            options={"db_table": "orders", "managed": False,},
        ),
        migrations.CreateModel(
            name="Recipe",
            fields=[
                ("recipe_id", models.IntegerField(primary_key=True, serialize=False)),
                ("recipe_name", models.CharField(max_length=25)),
                ("sizes", models.IntegerField(blank=True, null=True)),
            ],
            options={"db_table": "recipe", "managed": False,},
        ),
        migrations.CreateModel(
            name="RecipeIngredient",
            fields=[
                ("in_recip", models.IntegerField(primary_key=True, serialize=False)),
                ("quantity", models.IntegerField(blank=True, null=True)),
            ],
            options={"db_table": "recipe_ingredient", "managed": False,},
        ),
        migrations.CreateModel(
            name="Staff",
            fields=[
                ("staff_id", models.IntegerField(primary_key=True, serialize=False)),
                ("staff_role", models.CharField(blank=True, max_length=25, null=True)),
                ("role_schedule", models.DateField(blank=True, null=True)),
            ],
            options={"db_table": "staff", "managed": False,},
        ),
        migrations.CreateModel(
            name="Customization",
            fields=[
                (
                    "shake",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="orderpreparation.milkshake",
                    ),
                ),
                ("quantity", models.IntegerField(blank=True, null=True)),
            ],
            options={"db_table": "customization", "managed": False,},
        ),
    ]
